First, one point to clarify is that shift2bikes.org is not Dan's
web site.  It's Shift's web site.  Shift is a project of Umbrella,
a local 501(c)3 nonprofit that promotes transportation-oriented
causes.  Shift's goal is to promote bike fun, and Shift's web site
is sort of "neutral ground" for bike clubs to add their events.

We want to read Portland Wheelmen Touring Club's calendar, and merge
their events into the Shift calendar.  Most of the events are more...
"Bohemian" lets say... than PWTC rides, so PWTC would add some
welcome variety.  It'd also bring PWTC to the attention of cyclists
who otherwise might not know about you.

PWTC's calendar has an RSS feed at http://pwtc.com/calendar/rss.
RSS is not ideal for distributing calendar data (or much of anything
else) but they're using it in a self-consistent way so it should be
parsable.  I'll need to dig through the <description> of each event
to get some of the critical data fields.

The plan is to poll the PWTC calendar often, and mirror them in the
Shift calendar.  How often is too often?  Is every 15 minutes okay?
Once per day?

* Area
	Shift's calendar is specifically for bike fun in the greater
	Portland area.  Some PWTC rides are outside that area.  I'd
	like to exclude them, if there's easy way to tell.

* Address
	The address appears in two places: near the beginning of
	the description, and inside a <div> tag near the end of the
	description.  I think the one in the <div> tag will be easier
	to parse.  However, that probably means I should omit the
	one near the top of the description, if possible.

* Date, time
	PWTC's RSS feed buries the date and time inside the
	<description>, in a <div> block.  Repeating events give a
	rule with an ending date, and then list the individual dates.
	Shift's calendar also allows repeating dates, but some of the
	rules are different.  For example, Shift's calendar doesn't
	allow "every 4 weeks" as a repeat rule.  Probably I'll store
	and display the rule, but not parse it; instead, I'll actually
	use the list of individual dates.

* Distance
	PWTC apparently sticks this at the start of each description,
	in the same paragraph as the starting location.  I'd like to
	keep it.  Maybe make it bold and put it at the end of the
	textual description.

* Title
	Shift's calendar has two title fields

* Description
	Shift's calendar actually has two description fields
	
* Ride class and Group/non-group
	These have specific meaning withing PWTC, but not with Shift's
	usual audience.  It'd be nice to define them.  Maybe I should
	lift those terms out of the description, and use them as the
	name of "web site" contact info with the URL of PWTC's ride
	rating page, http://www.pwtc.com/RideRating.  E.g., the text
	"PWTC class C group ride" would appear amidst the contact info
	at the bottom of the event.

* Comments
	Normally, each event on the Shift calendar has its own mini-forum
	for comments.  The PWTC RSS feed has a <comments> link, but there
	doesn't actually seem to be a place to put comments there.  What's
	the best solution?

* Contact
	Shift's calendar supports name, email address, phone number,
	web site URL, and "other".  The name is required but can be a
	pseudonym.  The email address is also required because we send
	a confirming message to it with information on how to edit the
	event.  The rest of the fields are optional.

	All of the contact fields except "name" can be hidden or shown
	in the online calendar and (separately) in the printed calendar.
	In the online version, email addresses are always obfuscated to
	prevent spammers from harvesting address lists from our site.

	Where Shift supports a single contact with explicit fields,
	PWTC apparently has a big fat text field.  I'll have to parse
	that as best I can, and assume organizers want any information
	they put there is intended to be displayed.

* Links
	In the Shift calendar, anything that looks like a URL is
	treated as a web link.  So if a PWTC event description says
	"Heavy rain cancellation listed at http://twitter.com/pwrcride"
	then that'll be a clickable link.

* Logo
	The Shift calendar allows each event to have a small image
	associated with it.  The image is optional but desirable.
	Images break up the event listing, making it more pleasant
	to read.  Often, the image is the logo of the group that's
	organizing the event.  The PTWC calendar doesn't give each
	event the ability to add an image, so I think it'd make
	sense to use PWTC's logo as the image for all events imported
	from PWTC's calendar.

* Map to starting point
	The Shift calendar has both a street address and (optionally)
	a venue name for each event's starting location.  It looks
	like PWTC's calendar does too, so that should work well.
	PWTC's RSS feed also embeds a Google Map.  Shift has a link
	to the full Google Maps page.  That shouldn't be a problem.

* Pedalpalooza
	Each June, Shift organizes Pedalpalooza -- 3+ weeks of bike
	fun.  The Pedalpalooza events are added to the same calendar
	database, which means repeating events that happen to occur
	between June 6 and June 29 this year will show on both the
	normal calendar and the online version of the Pedalpalooza
	calendar.  Do you want PWTC events on the Pedalpalooza
	calendar?  We have the ability to hand-edit the printed
	version of the Pedalpalooza calendar, but not online one.

* Syncing events
	In the Shift calendar, each event has two fields specifically
	intended to support importing calendar data like this: a
	"source" field which will contains the RSS URL, and an
	"external" field which will be the <guid> for each event.

	After parsing the RSS data, my plan is to first scan the files
	and delete/update records based on the RSS feed, and then scan
	the RSS feed for anything not yet flagged as "used" and adding
	records for those.  I'll need to do similar updates for both
	calevent/RSS-items and caldaily/dates-in-RSS-items.

	For each PWTC event in our calevent table...
	   If it is NOT in the RSS feed
		Delete it and its caldaily records.
	   Else
		Mark the RSS item as "used"
		Update the calevent record from RSS
		For each caldaily record of this event...
		    If it is NOT in the RSS item
			Delete the caledaily record
		    Else
			Update it (probably no changes)
		For each date in this RSS item...
		    If NOT flagged as "used"
			Add a caldaily record using its date/time.
	For each item in the RSS feed
	    If NOT flagged as "used"
		Add a calevent record with data from this item.
		For each date from this RSS item...
		    Add a caldaily record.

	This should go fast -- maybe 1 second.  However, if somebody
	fetches the calendar during that time, they'll still be able to
	see the PWTC events; i.e., they won't flash in & out of existence.

---------------------------------------------------------------------------
The main functional parts of the interface are:

* A parser for PWTC's RSS feed.
	This will be somewhat complicated.  A lot of the information is
	buried in the <description> field, which is meta-tagged XHTML.

* Generate calevent records from RSS items.
	Actually, generate the SQL statements to add/delete/update
	calevent records from RSS items.  The design of this code will
	depend heavily on the format of data returned by the parser.

* The record looper
	This is the pseudocode above.  Not terribly complex, really.

---------------------------------------------------------------------------
Plan of attack:

Start by making the parser.  It'll be the touchiest code, and this is
also where I'm most likely to need technical help from PWTC.  I want to
tap that resource while they're still interested.  The parser's output
should be a PHP object similar to the calevent records returned by the
mysql_fetch_array() function, but with an added caldaily[] array of
caldaily records.  This implies that most of the decisions about what
PWTC data gets stuffed into which Shift field are made while coding
this, which is a good thing.  More importantly, it means THE REST OF
THE CODE SHOULD WORK FOR ANY IMPORTED CALENDAR.
