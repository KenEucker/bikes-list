Options will be stored in plaintext files, not an SQL table.  This is
because we want to store the SQL server account information in options,
so we need to be able to get options before we can access SQL.

One file, named "optionsdefault" will store default options, along
with comments and type information.  This will be the same at every
site that uses the calendar.  When the calendar software is upgraded,
a new version of the options-default will be installed, so it *must*
not store any site-specific information.

Another file, named "options" will store the site-specific versions
of any options that differ from the defaults.

Later, when user profiles are supported, there may also be options
files for each user allowing them to customize some aspects of the
calendar, such as the theme.  These will be named "options-$user".

Each PHP page will load the default options first, then merge in
any site-specific options, and finally any user-specific options.
The resulting associative array is stored in a global variable
named $caloptions.

----------------------------------------------------------------------
FILE FORMAT

Each line of an options text file is processed separately.  Each
line can be blank, a type line, a comment, or a name=value pair.

Blank lines are ignored.

Lines that start with "#TYPE:" describe the datatype of the following
option.  Although the plaintext file stores all values as text, if
the #TYPE: line says its a number or a boolean, then the string will
be converted to the proper type when it is stored in $caloptions.

Lines that start with "#TYPEALL:" are the same as "#TYPE:" except
that "#TYPEALL:" applies to all following options until the next
comment or type line.

Other lines that start with "#" are comments describing the next
option.  These are ignored when merely loading options, but the
option editor page collects them and displays them as help text for
the option.  Comments can extend across multiple lines, and will
concatenated with the "whitespace newline hash whitespace" converted
to a single space.  The comment text may use HTML, though some
constructs also imply HTML: a blank line implies a <p> tag, and a
line starting with "*" implies a <li> tag (with <ul> and </ul>
inserted where appropriate).  If an option is *not* preceded by a
"#" comment then it will inherit the previous option's comment,
allowing you to use one comment for a whole group of related options.

Lines of the form "name=value" define an option.  If the line was
preceded by a #TYPE: line then its value may be converted to a
number of boolean value, otherwise it is a string.

----------------------------------------------------------------------
DATA TYPES

The code in include/common.php only needs to worry about "number" and
"boolean".  Anything else can be stored as a string.

The options editor is more complex.  It can accept all of the following:

    number	The value must consist of digits only.
    boolean	The value will be edited via a <Select> menu showing Yes and No.
    text	Any one-line value is acceptable.  It will be entered via a
		text input.
    html	Any value is acceptable.  It will be entered via a <textarea>
		box, though newlines will be converted to spaces.
    a,b,...z	The value will be edited via a <Select> menu showing each
		comma-delimited value.
    /regexp/	The value will be validated against the regular expression.

----------------------------------------------------------------------
OPTIONS EDITOR

The current values of each option will be obtained from the $caloptions
array, as usual.  However, the "optionsdefault" file will be re-read to
pick up extra details such as the comment, data type, and default value
of each option.  The order in which they appear in that file will also
dictate the order in which they're listed on the screen.

The options, and their introductory comments, and listed on a single
long page.  Users can use the browser's built-in text searching feature
to locate options for a given topic.

As the "optionsdefault" page is scanned, the editor's form can be
generated.  There is no need to associate comments with specific options
that way, plus it makes it easy to edit the options in the same order as
they're listed in "optionsdefault".

The form loader is stateful.  In addition to storing type and typeall
strings, it can be in any one of the following states:
 TEXT: In a comment's normal text
 BRK: After an empty line in a comment; i.e., just "#"
 LIST: Inside a <ul>...</ul> list
 OTHER: Not in a comment

	from->	TEXT	BRK	LIST	OTHER	Side-effects
    #TYPE:	TEXT	BRK	LIST	OTHER	set the type variable
    #TYPEALL:	TEXT	BRK	LIST	OTHER	set the type and typeall vars
    # *text	LIST[1]	LIST[1]	LIST	LIST[1]	[1]prepend<ul>, prepend <li>
    # text	TEXT	TEXT[2]	LIST	TEXT[3]	[2]append <p>, [3] start comment
    #empty	BRK	BRK	BRK[4]	OTHER	[4]append </ul>
    empty	BRK	BRK	BRK[5]	OTHER	[5]append </ul>
    name=value	OTHER	OTHER	OTHER[6]OTHER	[6]append </ul>
    	

----------------------------------------------------------------------
EXAMPLE OF "optionsdefault"


# These supply the values needed to log into the SQL database
dbhost=localhost
dbuser=steve
dbpassword=pw
dbdatabase=pp

# Directory where SHIFT's standard header and footer are stored
includes=../includes

# URL of the Directory where the calendar resides
calurl=http://localhost/~shift/cal/"

# The page to show when the user loads CALURL
mainpage=repeattest.php

# Email address for PP calendar crew.  This is used as the "From:"
# address of confirmation messages, and is also CC'ed a copy of
# all messages.
calemail=skirkendall@dsl-only.net

# Image height limits.  Usually the image will be drawn on the right side
# of the page, where there's more room.  If two consecutive events both have
# images, then the second one will have its image on the left so it won't
# overlap with first event's image.  Generally the rightheight should be
# larger than the leftheight since there's more room on the right.
# TYPE: number
rightheight=200
# TYPE: number
leftheight=125

# Default area code when entering a phone number
areacode=503

# This controls the way the adminstrator's pages are protected.  It can be
# one of the following:
# * None.  This leaves the administrator's page unprotected.  This is the
#   default, in order to allow you to log in once to change this.
# * Internal.  This uses a goofy protection scheme in which the userid
#   and password are stored in options, below.
# * Drupal.  Use Drupal's authentication method to log in.
# TYPE: None,Internal,Drupal
adminmethod=None

# If adminmethod=Internal, then these are the userid and password used
# for logging into the calendar's administration pages.
adminuser=userid
adminpass=password

# Info about Pedalpalooza or Velopalooza.  In addition to the values here,
# you'll have to do some heavy editing to the year-specific version the
# festival calendar (e.g., "viewpp2010.php").
ppname=Pedalpalooza
ppstart=2010-06-10
ppend=2010-06-26
ppstartmonthday=June 10
# TYPE: number
ppdays=17
ppdates=June 10-26
ppurl=viewpp2010.php
ppsmall=images/pp10logo.jpg
pplarge=images/pp2010full.jpg

# These 32 words are used to convert an event number into an obscured
# string which can incorporated into the edit link that's email to the
# event's organizer.  All words must be capitalized.
# TYPE ALL: /^[A-Z][a-z]*$/
obscure0=Skewer
obscure1=Axle
obscure2=Hub
obscure3=Cog
obscure4=Spoke
obscure5=Valve
obscure6=Rim
obscure7=Tube
obscure8=Patch
obscure9=Tire
obscure10=Fork
obscure11=Head
obscure12=Frame
obscure13=Bar
obscure14=Grip
obscure15=Brake
obscure16=Cable
obscure17=Crank
obscure18=Pedal
obscure19=Tape
obscure20=Saddle
obscure21=Chain
obscure22=Stop
obscure23=Spacer
obscure24=Pump
obscure25=Lever
obscure26=Nut
obscure27=Pad
obscure28=Ball
obscure29=Cage
obscure30=Bead
obscure31=Light

# This controls the way times-of-day are displayed
# TYPE: 12hr,24hr
clocktype=12hr

# This is the local timezone.  You should only need to set this if the web host
# is in a different timezone.  The value should be one of the values listed in
# <a href="http://us3.php.net/manual/en/timezones.php" target="_BLANK">the PHP manual</a>.
caltimezone=

#ex:set shiftwidth=4 embedlimit=99999:
?>
