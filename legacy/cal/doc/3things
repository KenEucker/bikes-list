ical
single-event html
source code

also vfydates.php

-------------------------------------------------------------------------
ICAL

iCal is a standard web format for distributing calendar events.
It is defined in RFC-1445.  Basically, it is a text file where
each line is either of the form "HEADER:data", or an indented
line which is a continuation of the previous line's data.
You can easily view raw iCal data in any text editor.

The Google Calendar can import events via iCal; you tell Google
Calendar to import it, and thereafter it will automatically
re-fetch the iCal data and update the combined calendar views
of each user who has added it to their personal calendar.

iCal isn't perfect.  It is sort of the "least common denominator"
of calendar event representation.  It has no way to represent a
lot of useful event details.

The Shift calendar has an iCal feed available at...

	http://www.shift2bikes.org/cal/icalpp.php

As currently implemented, it isn't ideal for use with the mobile
app.  Some problems are:

* It is hardcoded to return all events during Pedalpalooza.
  I can easily modify it to support dates passed as parameters.

* iCal allows attachments.  Shift's icalpp.php page attaches a
  link to the event in the online calendar.  For the the mobile
  app, I think it'd be better to embed the image in the iCal data.

  (By the way, iCal seems allows multiple attachments [RFC-2445
  isn't clear about this], but it has no means for tagging each
  attachment, so if I tried to put both the "21+ Adults Only" icon
  and the event's image as attachments, you would have no clear
  way to tell one from the other.)

* It doesn't include the "Family Friendly" or "21+ Adults Only"
  flags, or the "Vancouver" flag.  iCal doesn't support any good
  way to represent these, or a few other neat features.

* It uses the short "print" descriptions, instead of the full
  descriptions used in the online calendar.

* The address and "location details" are combined in the iCal
  LOCATION: line.  For mapping, it'd be nice if LOCATION: was
  a mappable address with no "location details".

-----------------------------------------------------------------------
SINGLE-EVENT HTML

The Shift calendar has a PHP page that returns the HTML for a single
event.  This is used mostly to fill in a pop-up window in the page
that lets you generate a custom pocket reference.  If you hover over
the checkbox for an event for about 1 second, then the page uses this
to fetch the description of the event and show it in a pop-up window.
The URL of the single-event PHP page is...

	http://www.shift2bikes.org/viewsingle.php?id=...&sqldate=...

The "id" parameter is a number uniquely identifying the event.  The
id is used for selecting the forum, for external links to the event,
and internally for multiple purposes.  An obscured version of the
event id number is also used (via an "edit" parameter, not "id") to
edit an event.

The "sqldate" parameter selects the date of the event.  This is really
only useful for multi-day events, but it is required even if the event
happens to be a single day event.  It should be in the format that
MySql likes: "YYYY-MM-DD".

The returned text is an HTML fragment.  It has no header or footer,
though it does include a <style> section and the date in an <h2>
heading.

-------------------------------------------------------------------------
SOURCE CODE

The source code is implemented in PHP and JavaScript.  Some of the
JavaScript is embedded in the *.php files, and some resides in
separate *.js files.

Start by looking at doc/Overview.  It describes the way the source
code is laid out.

-------------------------------------------------------------------------
DATES

The Shift calendar can handle multi-day events.  This complicates
things in a VERY WORTHWHILE way.

In calform.php, the "Short" and "Pedalpalooza" views of the form
only allow you to select a date from a list, but the "Long" view
lets you type a free-form string; this is the only way to describe
the days of multi-day events.  When you select a date from the lists
shown by the "Short" or "Pedalpalooza" views, your chosen date's
text is copied into the (now hidden) text field.

Once a date is entered, it must be parsed.  This is done by a PHP
function named repeatdates(), which is defined in "include/repeat.php".
Since it is a PHP function, not a JavaScript function, calform.php
must issue an AJAX request back to the Shift server to have it be
parsed.  THIS IS A GOOD THING!  It means repeatdates() can also check
the SQL database to add each date's status to the parsed values.

The vfydates.php page is used to implement this request.  It is
passed three parameters, as part of the URL: dates (the date text
entered by the user), id (indicates an existing event that's being
edited), and reload (adjusts the status, depending on context).
These are described a bit more in a comment at the top of the PHP
source code.

The response message is XML.  I never bothered to define a DTD for
it, but for a failure, the message looks like...

	<vfydates>
	  <error>$ERRORMSG</error>
	</vfydates>

... where $ERRORMSG is either "Date not understood" or "No matching
dates".

A successful response looks like...

	<vfydates>
	  <id>$ID</id>
	  <canonical>$CANONICAL</canonical>
	  <datestype>$DATESTYPE</datestype>
	  <datelist>
	    <timestamp>$TIME_T</timestamp>
	    <hrdate>$WEEKDAY $MONTH $DAYOFMONTH</hrdate>
	    <suffix>$MONTH$DAYOFMONTH</suffix>
	    <status>$STATUS</status>
	    <exception>$EDIT</exception>
	    <newsflash>$NEWSFLASH</newsflash>
	    <change>$CHANGEFLAG</change>
	    <newdate>$NEWFLAG</newdate>
	    <olddate>$OLDFLAG</olddate>
	  </datelist>
	</vfydates>

... where $ID is the value that was passed via an "id=..." parameter
in the URL (if any).  $DATESTYPE is one of "one", "consecutive", or
"scattered", describing the how the individual days of the event
relate to each other.

Then we get into the <datelist>, which has an entry for each date
that is either already in the SQL database for this event, or is part
of the "date=..." string.  The $TIMESTAMP is a Unix time_t value for a
date of the event; in PHP you can use the date() function to convert
it to a human-readable format.  The value in <hrdate> is an example
of this.  The value in the <suffix> is used in the calendar's HTML
code as part of a tag "id" attribute, in various ways.

The rest of the attributes are mostly determined by code in
"include/daily.php", and are mostly determined by comparing the
request's "dates=..." parameter to what's in the SQL files.
$STATUS is one of "Added", "As Scheduled", "Skipped", "Canceled",
"Deleted", or "Exception" to indicate the status of the event on a
particular day.  If it is an exception, then $EDIT is the obscured
id of the exception event.  $NEWSFLASH is optional text entered by
the user for things like "Moved to next Tuesday".  $CHANGEFLAG is
"Y" if the day would be added or deleted, when the edited event is
saved.  $NEWFLAG is "Y" if the date is in the "dates=..." request
parameter, but not in the SQL tables.  $OLDFLAG is "Y" if the date
is in SQL database but not in the "dates=..." parameter.

----------------------------------------------------------------------------
I guess this is a good time to talk about exceptions.  The Shift
calendar allows you to have repeating events in which some instances
of the event are different from the others.  For example, North Freak
hosts a ride on the fourth Friday of each month, starting at Irving
Park.  Often the ride has a special theme, and they could use
exceptions to describe each month's theme.  The Midnight Mystery Ride
is always the second Friday of each month, but each month it starts
at a different point, has a different leader, and may have a special
description such as "bring camping gear".
